// Code generated by MockGen. DO NOT EDIT.
// Source: ./activeObject/activeObject.go

// Package mocks is a generated GoMock package.
package activeObject

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUnitInterface is a mocks of UnitInterface interface
type MockUnitInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUnitInterfaceMockRecorder
}

// MockUnitInterfaceMockRecorder is the mocks recorder for MockUnitInterface
type MockUnitInterfaceMockRecorder struct {
	mock *MockUnitInterface
}

// NewMockUnitInterface creates a new mocks instance
func NewMockUnitInterface(ctrl *gomock.Controller) *MockUnitInterface {
	mock := &MockUnitInterface{ctrl: ctrl}
	mock.recorder = &MockUnitInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUnitInterface) EXPECT() *MockUnitInterfaceMockRecorder {
	return m.recorder
}

// InstallFunc mocks base method
func (m *MockUnitInterface) InstallFunc(callback func()) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InstallFunc", callback)
	ret0, _ := ret[0].(bool)
	return ret0
}

// InstallFunc indicates an expected call of InstallFunc
func (mr *MockUnitInterfaceMockRecorder) InstallFunc(callback interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InstallFunc", reflect.TypeOf((*MockUnitInterface)(nil).InstallFunc), callback)
}

// GetName mocks base method
func (m *MockUnitInterface) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName
func (mr *MockUnitInterfaceMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockUnitInterface)(nil).GetName))
}

// GetNext mocks base method
func (m *MockUnitInterface) GetNext() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNext")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetNext indicates an expected call of GetNext
func (mr *MockUnitInterfaceMockRecorder) GetNext() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNext", reflect.TypeOf((*MockUnitInterface)(nil).GetNext))
}
